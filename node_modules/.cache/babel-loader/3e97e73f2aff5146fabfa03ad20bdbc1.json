{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{ProductsContainer,ProductsH1,ProductsWrapper,ProductCard,ProductImage,ProductName,ProductPriceWrapper,ProductNewPrice,ProductOldPrice,ProductBtnWrapper,AddToBagBtn,BagIcon,ProductBadge,ProductDetailsWrapper,ProductDesc}from'./ProductsElements';import CounterElementProductPage from\"../CounterElementProductPage\";// \nimport{GoPlus}from'react-icons/go';import{TiMinus}from'react-icons/ti';import styled from\"styled-components\";// \nimport{ContextConsumer}from'../../utils/Context';import{constants}from'../../constants/values';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Products=function Products(_ref){var heading=_ref.heading,data=_ref.data;var contextValues=useContext(ContextConsumer);// console.log(\"ContextConsumer: \", values);\n// useEffect(  () =>{\n//     contextValues.initUserAddress();\n//     contextValues.initKitProducts();\n// },[])\nfunction CheckExistanceOfProductInCart(value){var output;var index=0;var foundIndex=-1;try{if(contextValues.cart[0]){contextValues.cart[0].map(function(item){if(item.product_id===value.id){// console.log(\"exists for :\", item.product_id )\n// return item;\noutput=item;foundIndex=index;}index++;});}}catch(_unused){}return{output:output,foundIndex:foundIndex};// console.log(\"count : \", count);\n}// checkExistance()\n// console.log(\"product : \", contextValues.products_veg)\n// console.log(\"cart : \", contextValues.cart)\nreturn/*#__PURE__*/_jsxs(ProductsContainer,{id:\"products\",children:[/*#__PURE__*/_jsx(ProductsH1,{children:heading}),/*#__PURE__*/_jsx(ProductsWrapper,{children:contextValues.products_veg.map(function(product,index){var item=CheckExistanceOfProductInCart(product);// console.log( \"product in cart :\",  item  )\nvar cartFound=item.foundIndex>-1;return/*#__PURE__*/_jsxs(ProductCard,{children:[/*#__PURE__*/_jsx(ProductBadge,{children:\"naadan\"}),/*#__PURE__*/_jsx(ProductImage,{src:product.image_url}),/*#__PURE__*/_jsx(ProductName,{children:product.name}),/*#__PURE__*/_jsxs(ProductNewPrice,{children:[\"\\u20B9\",product.price,\" / \",constants.MINIMUM_QUANTITY,\" gm\"]}),/*#__PURE__*/_jsx(ProductDetailsWrapper,{children:cartFound?/*#__PURE__*/_jsx(CounterElementProductPage,{quantity:item.output.quantity,isInCart:true,productId:product.id}):/*#__PURE__*/_jsx(CounterElementProductPage,{quantity:1,isInCart:false,productId:product.id})})]},index);})})]});};export default Products;","map":{"version":3,"sources":["/home/sree/Documents/Works/naadanvipani/frontend/naadan-vipani-trivandrum-for-backend-master/src/components/Products/index.js"],"names":["React","useContext","useEffect","useState","ProductsContainer","ProductsH1","ProductsWrapper","ProductCard","ProductImage","ProductName","ProductPriceWrapper","ProductNewPrice","ProductOldPrice","ProductBtnWrapper","AddToBagBtn","BagIcon","ProductBadge","ProductDetailsWrapper","ProductDesc","CounterElementProductPage","GoPlus","TiMinus","styled","ContextConsumer","constants","Products","heading","data","contextValues","CheckExistanceOfProductInCart","value","output","index","foundIndex","cart","map","item","product_id","id","products_veg","product","cartFound","image_url","name","price","MINIMUM_QUANTITY","quantity"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,UAAd,CAAyBC,SAAzB,CAAoCC,QAApC,KAAmD,OAAnD,CACA,OAASC,iBAAT,CAA4BC,UAA5B,CAAwCC,eAAxC,CAAyDC,WAAzD,CAAsEC,YAAtE,CAAoFC,WAApF,CAAiGC,mBAAjG,CAAsHC,eAAtH,CAAuIC,eAAvI,CAAwJC,iBAAxJ,CAA2KC,WAA3K,CAAwLC,OAAxL,CAAiMC,YAAjM,CAA+MC,qBAA/M,CAAsOC,WAAtO,KAAwP,oBAAxP,CACA,MAAOC,CAAAA,yBAAP,KAAsC,8BAAtC,CAIA;AACA,OAASC,MAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,KAAuB,gBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA;AAIA,OAAQC,eAAR,KAA8B,qBAA9B,CACA,OAAQC,SAAR,KAAwB,wBAAxB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqB,IAAnBC,CAAAA,OAAmB,MAAnBA,OAAmB,CAAVC,IAAU,MAAVA,IAAU,CAElC,GAAMC,CAAAA,aAAa,CAAG3B,UAAU,CAACsB,eAAD,CAAhC,CAEA;AAEA;AACA;AACA;AACA;AAEA,QAASM,CAAAA,6BAAT,CAAuCC,KAAvC,CAA8C,CAC1C,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,KAAK,CAAC,CAAV,CACA,GAAIC,CAAAA,UAAU,CAAC,CAAC,CAAhB,CACA,GAAG,CACC,GAAGL,aAAa,CAACM,IAAd,CAAmB,CAAnB,CAAH,CACA,CACIN,aAAa,CAACM,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,SAAAC,IAAI,CAAG,CAC7B,GAAGA,IAAI,CAACC,UAAL,GAAkBP,KAAK,CAACQ,EAA3B,CACA,CACI;AACA;AACAP,MAAM,CAAEK,IAAR,CACAH,UAAU,CAAED,KAAZ,CACH,CACDA,KAAK,GACR,CATD,EAWH,CAEJ,CACD,cAAK,CAEJ,CAED,MAAO,CAACD,MAAM,CAANA,MAAD,CAAQE,UAAU,CAAVA,UAAR,CAAP,CAEA;AACH,CAGD;AACA;AACA;AAGA,mBACI,MAAC,iBAAD,EAAmB,EAAE,CAAC,UAAtB,wBACI,KAAC,UAAD,WAAaP,OAAb,EADJ,cAEI,KAAC,eAAD,WACKE,aAAa,CAACW,YAAd,CAA2BJ,GAA3B,CAA+B,SAACK,OAAD,CAAUR,KAAV,CAAoB,CAEhD,GAAMI,CAAAA,IAAI,CAAEP,6BAA6B,CAACW,OAAD,CAAzC,CACA;AAEA,GAAIC,CAAAA,SAAS,CAAEL,IAAI,CAACH,UAAL,CAAgB,CAAC,CAAhC,CACA,mBAEI,MAAC,WAAD,yBACA,KAAC,YAAD,qBADA,cAEA,KAAC,YAAD,EAAc,GAAG,CAAEO,OAAO,CAACE,SAA3B,EAFA,cAGA,KAAC,WAAD,WAAcF,OAAO,CAACG,IAAtB,EAHA,cAMA,MAAC,eAAD,qBAAmBH,OAAO,CAACI,KAA3B,OAAqCpB,SAAS,CAACqB,gBAA/C,SANA,cAQA,KAAC,qBAAD,WAGQJ,SAAS,cACT,KAAC,yBAAD,EAA2B,QAAQ,CAAEL,IAAI,CAACL,MAAL,CAAYe,QAAjD,CAA2D,QAAQ,CAAE,IAArE,CAA2E,SAAS,CAAEN,OAAO,CAACF,EAA9F,EADS,cAGT,KAAC,yBAAD,EAA2B,QAAQ,CAAE,CAArC,CAAwC,QAAQ,CAAE,KAAlD,CAAyD,SAAS,CAAEE,OAAO,CAACF,EAA5E,EANR,EARA,GAAkBN,KAAlB,CAFJ,CAwCH,CA9CA,CADL,EAFJ,GADJ,CAuDH,CAtGD,CA+GA,cAAeP,CAAAA,QAAf","sourcesContent":["import React,{useContext,useEffect, useState} from 'react'\nimport { ProductsContainer, ProductsH1, ProductsWrapper, ProductCard, ProductImage, ProductName, ProductPriceWrapper, ProductNewPrice, ProductOldPrice, ProductBtnWrapper, AddToBagBtn, BagIcon, ProductBadge, ProductDetailsWrapper, ProductDesc} from './ProductsElements'\nimport CounterElementProductPage from \"../CounterElementProductPage\";\n\n\n\n// \nimport { GoPlus} from 'react-icons/go';\nimport { TiMinus} from 'react-icons/ti';\nimport styled from \"styled-components\";\n// \n\n\n\nimport {ContextConsumer} from '../../utils/Context'\nimport {constants} from '../../constants/values';\n\nconst Products = ({heading, data}) => {\n\n    const contextValues = useContext(ContextConsumer);\n    \n    // console.log(\"ContextConsumer: \", values);\n\n    // useEffect(  () =>{\n    //     contextValues.initUserAddress();\n    //     contextValues.initKitProducts();\n    // },[])\n    \n    function CheckExistanceOfProductInCart(value) {\n        var output;\n        var index=0;\n        var foundIndex=-1;\n        try{\n            if(contextValues.cart[0])\n            {\n                contextValues.cart[0].map(item =>{ \n                    if(item.product_id===value.id)\n                    {\n                        // console.log(\"exists for :\", item.product_id )\n                        // return item;\n                        output= item;\n                        foundIndex= index;\n                    }\n                    index++;\n                });\n        \n            }\n            \n        }\n        catch{\n\n        }\n        \n        return {output,foundIndex};\n\n        // console.log(\"count : \", count);\n    }\n\n\n    // checkExistance()\n    // console.log(\"product : \", contextValues.products_veg)\n    // console.log(\"cart : \", contextValues.cart)\n\n\n    return (\n        <ProductsContainer id=\"products\">\n            <ProductsH1>{heading}</ProductsH1>\n            <ProductsWrapper>\n                {contextValues.products_veg.map((product, index) => {\n                    \n                    const item= CheckExistanceOfProductInCart(product);\n                    // console.log( \"product in cart :\",  item  )\n\n                    var cartFound =item.foundIndex>-1;\n                    return (\n\n                        <ProductCard key={index}> \n                        <ProductBadge >naadan</ProductBadge>    \n                        <ProductImage src={product.image_url}/>\n                        <ProductName>{product.name}</ProductName>\n\n\n                        <ProductNewPrice>₹{product.price} / {constants.MINIMUM_QUANTITY} gm</ProductNewPrice>\n\n                        <ProductDetailsWrapper>\n                            \n                            {\n                                cartFound?\n                                <CounterElementProductPage quantity={item.output.quantity} isInCart={true} productId={product.id} />\n                                :\n                                <CounterElementProductPage quantity={1} isInCart={false} productId={product.id} />\n                                \n                            }\n                                \n                                \n                            \n                        \n                            {/* <ProductPriceWrapper>\n                                <ProductNewPrice>₹{product.newPrice}</ProductNewPrice>\n                                <ProductOldPrice>₹{product.oldPrice}</ProductOldPrice>\n                            </ProductPriceWrapper> */}\n\n                            {/* <ProductBtnWrapper>\n\n                                <AddToBagBtn onClick={()=>{ contextValues.AddToCart(product.id , 1) }}  to='/' >\n                                Add to Cart { <BagIcon /> }\n                                    </AddToBagBtn>\n                                    \n                            </ProductBtnWrapper> */}\n\n                        </ProductDetailsWrapper>\n                        </ProductCard>\n                    )\n\n                })}\n\n            </ProductsWrapper>\n        </ProductsContainer>\n    )\n}\n\n\n\n\n\n\n\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}