{"ast":null,"code":"var _jsxFileName = \"/home/sree/Documents/Works/naadanvipani/frontend/naadan-vipani-trivandrum-for-backend-master/src/utils/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { authenticate, isAuthenticated } from '../Auth/AuthenticationHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Base_URL = 'http://localhost:4000';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(props) {\n  _s();\n\n  // FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n  const [block, setblock] = useState(\"0\");\n  const [district, setdistrict] = useState(\"0\"); // FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n\n  const [values, setValues] = useState({\n    // cart : [],\n    products_veg: [],\n    _home_screen: 'kit',\n    // kit or veg\n    kit_screen: '200' //200 or 400\n    // user_address : [],\n\n  });\n  const [userValues, setUserValues] = useState({\n    user_address: []\n  });\n  const [cart, setCart] = useState({\n    cart: []\n  });\n\n  const initUserAddress = async () => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    let phoneNumber; // console.log(\"init address\")\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'GET',\n      'url': `${Base_URL}/user/${phoneNumber}`,\n      'headers': {\n        'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n      },\n      'data': qs.stringify({})\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        // console.log(res.data)\n        if (res.data.full_name === 'notfound') {\n          // console.log(\"no user\");\n          UpdateNullAddress();\n        } else {\n          setUserValues({ ...userValues,\n            user_address: [res.data] // match it from backend\n\n          }); // console.log(\"201 : \" , res.data )\n          // console.log(\"return true\")\n        }\n      } else {\n        console.log(\"401 : \", res.data);\n      }\n    }).catch(err => {});\n    return true;\n  }; // ---------------------------------------------------\n  // CART START \n\n\n  const InitCart = async () => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    let phoneNumber; // console.log(\"Add to cart : \", itemId , \" , \" , Quantity );\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'GET',\n      'url': `${Base_URL}/cart/${phoneNumber}`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {}\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        // console.log(\" data read from cart : \" , res.data )\n        // let phoneNo = isAuthenticated().phoneNumber;\n        // let phoneNumber;\n        setCart({ ...cart,\n          cart: [res.data]\n        }); // console.log(\"cart : \", res.data)\n      }\n    }).catch(err => {});\n  };\n\n  const AddToCart = async (itemId, quantity) => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    let phoneNumber; // console.log(\"Add to cart : \", itemId , \" , \" , Quantity );\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'POST',\n      'url': `${Base_URL}/cart/`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        \"product_id\": `${itemId}`,\n        \"quantity\": quantity,\n        \"user_id\": `${phoneNumber}`,\n        \"ordered_or_not\": 1\n      }\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        console.log(\" data pushed : \", res.data); // let phoneNo = isAuthenticated().phoneNumber;\n        // let phoneNumber;\n\n        setUserValues({ ...userValues,\n          user_address: [res.data] // match it from backend\n\n        });\n        initKitProducts();\n      }\n    }).catch(err => {});\n  }; // counter handle\n\n\n  const CartChangeCount = async (itemId, quantity) => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    let phoneNumber;\n    console.log(\"cart count adjust : \", itemId, \" , \", quantity);\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'PATCH',\n      'url': `${Base_URL}/cart/${phoneNumber}`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        \"product_id\": `${itemId}`,\n        \"quantity\": `${quantity}`,\n        \"user_id\": `${phoneNumber}`,\n        \"ordered_or_not\": 1\n      }\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        console.log(\" data pushed : \", res.data); // let phoneNo = isAuthenticated().phoneNumber;\n        // let phoneNumber;\n\n        setUserValues({ ...userValues,\n          user_address: [res.data] // match it from backend\n\n        });\n        initKitProducts();\n      }\n    }).catch(err => {});\n  }; // CART SECTION END\n  // ---------------------------------------------------\n\n\n  const UpdateNullAddress = async () => {\n    let phoneNo = isAuthenticated().phoneNumber; // console.log(\" updateNull address : \" , district , block );\n\n    let phoneNumber;\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'POST',\n      'url': `${Base_URL}/user/`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        id: `${phoneNumber}`,\n        full_name: \"name\",\n        house_name: \"name\",\n        street_name: \"name\",\n        pincode: \"name\",\n        district: district,\n        block: block\n      }\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        console.log(\" data pushed : \", res.data); // let phoneNo = isAuthenticated().phoneNumber;\n        // let phoneNumber;\n\n        setUserValues({ ...userValues,\n          user_address: [res.data] // match it from backend\n\n        });\n        initKitProducts();\n      }\n    }).catch(err => {});\n  };\n\n  const initKitProducts = async () => {\n    // console.log(\"values :  \" , userValues.user_address[0] );\n    var data = userValues.user_address[0]; // console.log(\"init kit \");\n    // await fetch('https://api.npms.io/v2/search?q=react')\n\n    await axios({\n      'method': 'POST',\n      'url': `${Base_URL}/products/products-with-location/`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        district: data.district,\n        block: data.block\n      }\n    }).then(res => {\n      if (res.status === 201) {\n        setValues({ ...values,\n          products_veg: res.data // match it from backend\n\n        }); // console.log(\"res data : \", res.data );\n      }\n    }).catch(err => {\n      console.log(\"error at product init : \", err);\n    });\n  };\n\n  const placeOrder = async (slot, total_amount) => {\n    // console.log(\"values :  \" , userValues.user_address[0] );\n    var data = userValues.user_address[0];\n    let phoneNo = isAuthenticated().phoneNumber; // console.log(\" updateNull address : \" , district , block );\n\n    let phoneNumber;\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {} // console.log(\"init kit \");\n    // await fetch('https://api.npms.io/v2/search?q=react')\n\n\n    await axios({\n      'method': 'POST',\n      'url': `${Base_URL}/orders/`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        user_id: phoneNo,\n        slot: slot,\n        total_amount: total_amount,\n        status: 1,\n        payment_id: \"NULL\"\n      }\n    }).then(res => {\n      if (res.status === 201) {\n        setValues({ ...values,\n          products_veg: res.data // match it from backend\n\n        }); // console.log(\"res data : \", res.data );\n      }\n    }).catch(err => {\n      console.log(\"error at product init : \", err);\n    });\n  };\n\n  useEffect(async () => {\n    // call function to initialize data to product kit\n    if (isAuthenticated()) {\n      await initUserAddress(); // await initKitProducts()\n\n      await InitCart();\n    } // await initCartItems()\n    // await initOrderPlaced()\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: { ...userValues,\n      ...values,\n      block,\n      district,\n      ...cart,\n      setValues: setValues,\n      setUserValues: setUserValues,\n      setblock: setblock,\n      setdistrict: setdistrict,\n      initUserAddress: initUserAddress,\n      initKitProducts: initKitProducts,\n      AddToCart: AddToCart,\n      CartChangeCount: CartChangeCount,\n      InitCart: InitCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 9\n  }, this);\n} // const ContextConsumer = ProductContext.Consumer;\n\n\n_s(ContextProvider, \"FnyQCeEQoibphDqGqku180ehqm4=\");\n\n_c = ContextProvider;\nconst ContextConsumer = ProductContext;\nexport { ContextConsumer, ContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/sree/Documents/Works/naadanvipani/frontend/naadan-vipani-trivandrum-for-backend-master/src/utils/Context.js"],"names":["React","useEffect","useState","useContext","axios","qs","authenticate","isAuthenticated","Base_URL","ProductContext","createContext","ContextProvider","props","block","setblock","district","setdistrict","values","setValues","products_veg","_home_screen","kit_screen","userValues","setUserValues","user_address","cart","setCart","initUserAddress","phoneNo","phoneNumber","substring","stringify","then","res","status","data","full_name","UpdateNullAddress","console","log","catch","err","InitCart","AddToCart","itemId","quantity","initKitProducts","CartChangeCount","id","house_name","street_name","pincode","placeOrder","slot","total_amount","user_id","payment_id","children","ContextConsumer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAAQC,YAAR,EAAsBC,eAAtB,QAA4C,+BAA5C;;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAQA,MAAMC,cAAc,gBAAGT,KAAK,CAACU,aAAN,EAAvB;;AAEA,SAAUC,eAAV,CAA0BC,KAA1B,EAAiC;AAAA;;AAKjC;AAEI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,GAAD,CAAxC,CAR6B,CAUjC;;AAKI,QAAM,CAACe,MAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC;AAChC;AACAiB,IAAAA,YAAY,EAAE,EAFkB;AAGhCC,IAAAA,YAAY,EAAG,KAHiB;AAGV;AACtBC,IAAAA,UAAU,EAAG,KAJmB,CAIP;AACzB;;AALgC,GAAD,CAAnC;AAQA,QAAK,CAACC,UAAD,EAAYC,aAAZ,IAA6BrB,QAAQ,CAAC;AACvCsB,IAAAA,YAAY,EAAG;AADwB,GAAD,CAA1C;AAKD,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBxB,QAAQ,CAAC;AAC1BuB,IAAAA,IAAI,EAAG;AADmB,GAAD,CAA9B;;AAKC,QAAME,eAAe,GAAG,YAAU;AAC9B,QAAIC,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC;AACA,QAAIA,WAAJ,CAF8B,CAI9B;;AAEA,QACA;AACIA,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACH,KAHD,CAGC,MAAK,CAEL;;AAED,UAAM1B,KAAK,CAAC;AACR,gBAAgB,KADR;AAER,aAAiB,GAAEI,QAAS,SAAQqB,WAAY,EAFxC;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAexB,EAAE,CAAC0B,SAAH,CAAa,EAAb;AANP,KAAD,CAAL,CASLC,IATK,CASCC,GAAG,IAAG;AACT;AACA,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACI;AACA,YAAKD,GAAG,CAACE,IAAJ,CAASC,SAAT,KAAqB,UAA1B,EACA;AACI;AACAC,UAAAA,iBAAiB;AACpB,SAJD,MAMA;AAEId,UAAAA,aAAa,CAAC,EACE,GAAGD,UADL;AAEEE,YAAAA,YAAY,EAAG,CAACS,GAAG,CAACE,IAAL,CAFjB,CAE6B;;AAF7B,WAAD,CAAb,CAFJ,CAOI;AACA;AAEH;AAEJ,OArBD,MAsBK;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBN,GAAG,CAACE,IAA3B;AACH;AACJ,KApCK,EAoCHK,KApCG,CAoCGC,GAAG,IAAE,CACb,CArCK,CAAN;AAuCA,WAAO,IAAP;AAEH,GAtDD,CAjC6B,CA8F7B;AACA;;;AAEA,QAAMC,QAAQ,GAAG,YAAW;AAExB,QAAId,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC;AACA,QAAIA,WAAJ,CAHwB,CAKxB;;AAEA,QACA;AACIA,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACH,KAHD,CAGC,MAAK,CAEL;;AAGD,UAAM1B,KAAK,CAAC;AACR,gBAAgB,KADR;AAER,aAAiB,GAAEI,QAAS,SAAQqB,WAAY,EAFxC;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AANP,KAAD,CAAL,CASLG,IATK,CASAC,GAAG,IAAG;AACR;AACA,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACI;AACA;AACA;AACAR,QAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJA,UAAAA,IAAI,EAAC,CAACQ,GAAG,CAACE,IAAL;AAFD,SAAD,CAAP,CAJJ,CASI;AACH;AACJ,KAvBK,EAuBHK,KAvBG,CAuBGC,GAAG,IAAE,CAEb,CAzBK,CAAN;AA0BH,GAzCD;;AA4CA,QAAME,SAAS,GAAG,OAAOC,MAAP,EAAeC,QAAf,KAA2B;AAEzC,QAAIjB,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC;AACA,QAAIA,WAAJ,CAHyC,CAKzC;;AAEA,QACA;AACIA,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACH,KAHD,CAGC,MAAK,CAEL;;AAED,UAAM1B,KAAK,CAAC;AACR,gBAAgB,MADR;AAER,aAAiB,GAAEI,QAAS,QAFpB;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AACK,sBAAc,GAAEoC,MAAO,EAD5B;AAEK,oBAAWC,QAFhB;AAGK,mBAAW,GAAEhB,WAAY,EAH9B;AAIK,0BAAiB;AAJtB;AANP,KAAD,CAAL,CAaLG,IAbK,CAaAC,GAAG,IAAG;AACR;AACA,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACII,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCN,GAAG,CAACE,IAApC,EADJ,CAGI;AACA;;AACAZ,QAAAA,aAAa,CAAC,EACE,GAAGD,UADL;AAEEE,UAAAA,YAAY,EAAG,CAACS,GAAG,CAACE,IAAL,CAFjB,CAE6B;;AAF7B,SAAD,CAAb;AAKAW,QAAAA,eAAe;AAClB;AACJ,KA5BK,EA4BHN,KA5BG,CA4BGC,GAAG,IAAE,CAEb,CA9BK,CAAN;AA+BH,GA7CD,CA7I6B,CA6L7B;;;AACA,QAAMM,eAAe,GAAG,OAAOH,MAAP,EAAeC,QAAf,KAA2B;AAE/C,QAAIjB,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC;AACA,QAAIA,WAAJ;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCK,MAApC,EAA6C,KAA7C,EAAqDC,QAArD;;AAEA,QACA;AACIhB,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACH,KAHD,CAGC,MAAK,CAEL;;AAED,UAAM1B,KAAK,CAAC;AACR,gBAAgB,OADR;AAER,aAAiB,GAAEI,QAAS,SAAQqB,WAAY,EAFxC;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AACK,sBAAc,GAAEe,MAAO,EAD5B;AAEK,oBAAY,GAAEC,QAAS,EAF5B;AAGK,mBAAW,GAAEhB,WAAY,EAH9B;AAIK,0BAAiB;AAJtB;AANP,KAAD,CAAL,CAaLG,IAbK,CAaAC,GAAG,IAAG;AACR;AACA,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACII,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCN,GAAG,CAACE,IAApC,EADJ,CAGI;AACA;;AACAZ,QAAAA,aAAa,CAAC,EACE,GAAGD,UADL;AAEEE,UAAAA,YAAY,EAAG,CAACS,GAAG,CAACE,IAAL,CAFjB,CAE6B;;AAF7B,SAAD,CAAb;AAKAW,QAAAA,eAAe;AAClB;AACJ,KA5BK,EA4BHN,KA5BG,CA4BGC,GAAG,IAAE,CAEb,CA9BK,CAAN;AA+BH,GA7CD,CA9L6B,CA4O7B;AACA;;;AAIA,QAAMJ,iBAAiB,GAAG,YAAU;AAEhC,QAAIT,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC,CAFgC,CAIhC;;AAEA,QAAIA,WAAJ;;AACA,QAAG;AACCA,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACH,KAFD,CAGA,MAAK,CAEJ;;AAED,UAAM1B,KAAK,CAAC;AACR,gBAAgB,MADR;AAER,aAAiB,GAAEI,QAAS,QAFpB;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AACKwC,QAAAA,EAAE,EAAE,GAAEnB,WAAY,EADvB;AAEKO,QAAAA,SAAS,EAAC,MAFf;AAGKa,QAAAA,UAAU,EAAC,MAHhB;AAIKC,QAAAA,WAAW,EAAC,MAJjB;AAKKC,QAAAA,OAAO,EAAC,MALb;AAMKpC,QAAAA,QAAQ,EAACA,QANd;AAOKF,QAAAA,KAAK,EAACA;AAPX;AANP,KAAD,CAAL,CAgBLmB,IAhBK,CAgBAC,GAAG,IAAG;AACR;AACA,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACII,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCN,GAAG,CAACE,IAApC,EADJ,CAGI;AACA;;AACAZ,QAAAA,aAAa,CAAC,EACE,GAAGD,UADL;AAEEE,UAAAA,YAAY,EAAG,CAACS,GAAG,CAACE,IAAL,CAFjB,CAE6B;;AAF7B,SAAD,CAAb;AAKAW,QAAAA,eAAe;AAClB;AACJ,KA/BK,EA+BHN,KA/BG,CA+BGC,GAAG,IAAE,CAEb,CAjCK,CAAN;AAmCH,GAjDD;;AAoDA,QAAMK,eAAe,GAAG,YAAU;AAC9B;AACA,QAAIX,IAAI,GAAIb,UAAU,CAACE,YAAX,CAAwB,CAAxB,CAAZ,CAF8B,CAG9B;AACA;;AACA,UAAMpB,KAAK,CAAC;AACR,gBAAgB,MADR;AAER,aAAiB,GAAEI,QAAS,mCAFpB;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AACKO,QAAAA,QAAQ,EAACoB,IAAI,CAACpB,QADnB;AAEKF,QAAAA,KAAK,EAACsB,IAAI,CAACtB;AAFhB;AANP,KAAD,CAAL,CAWLmB,IAXK,CAWAC,GAAG,IAAG;AACR,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACIhB,QAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENE,UAAAA,YAAY,EAAGc,GAAG,CAACE,IAFb,CAEmB;;AAFnB,SAAD,CAAT,CADJ,CAKI;AACH;AACJ,KApBK,EAoBHK,KApBG,CAoBGC,GAAG,IAAE;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCE,GAAvC;AACH,KAtBK,CAAN;AAwBH,GA7BD;;AAiCJ,QAAMW,UAAU,GAAG,OAAOC,IAAP,EAAaC,YAAb,KAA4B;AAC3C;AACA,QAAInB,IAAI,GAAIb,UAAU,CAACE,YAAX,CAAwB,CAAxB,CAAZ;AACA,QAAII,OAAO,GAAGrB,eAAe,GAAGsB,WAAhC,CAH2C,CAK3C;;AAEA,QAAIA,WAAJ;;AACA,QAAG;AACKA,MAAAA,WAAW,GAAID,OAAD,CAAUE,SAAV,CAAoB,CAApB,CAAd;AACP,KAFD,CAEC,MAAK,CAEL,CAZ0C,CAc3C;AACA;;;AACA,UAAM1B,KAAK,CAAC;AACR,gBAAgB,MADR;AAER,aAAiB,GAAEI,QAAS,UAFpB;AAGR,iBAAgB;AACI,wBAAgB;AADpB,OAHR;AAMR,cAAe;AACK+C,QAAAA,OAAO,EAAC3B,OADb;AAEKyB,QAAAA,IAAI,EAACA,IAFV;AAGKC,QAAAA,YAAY,EAACA,YAHlB;AAIKpB,QAAAA,MAAM,EAAC,CAJZ;AAKKsB,QAAAA,UAAU,EAAC;AALhB;AANP,KAAD,CAAL,CAcLxB,IAdK,CAcAC,GAAG,IAAG;AACR,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACIhB,QAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENE,UAAAA,YAAY,EAAGc,GAAG,CAACE,IAFb,CAEmB;;AAFnB,SAAD,CAAT,CADJ,CAKI;AACH;AACJ,KAvBK,EAuBHK,KAvBG,CAuBGC,GAAG,IAAE;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCE,GAAvC;AACH,KAzBK,CAAN;AA2BH,GA3CD;;AA8CGxC,EAAAA,SAAS,CAAE,YAAU;AAChB;AACA,QAAGM,eAAe,EAAlB,EACA;AACI,YAAMoB,eAAe,EAArB,CADJ,CAEI;;AACA,YAAMe,QAAQ,EAAd;AACH,KAPe,CAWhB;AAEA;;AAEH,GAfO,EAeN,EAfM,CAAT;AAoBC,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,EAC5B,GAAGpB,UADyB;AAE5B,SAAGL,MAFyB;AAG5BJ,MAAAA,KAH4B;AAI5BE,MAAAA,QAJ4B;AAK5B,SAAGU,IALyB;AAO5BP,MAAAA,SAAS,EAAGA,SAPgB;AAQ5BK,MAAAA,aAAa,EAAGA,aARY;AAW5BT,MAAAA,QAAQ,EAACA,QAXmB;AAY5BE,MAAAA,WAAW,EAACA,WAZgB;AAc5BW,MAAAA,eAAe,EAACA,eAdY;AAgB5BmB,MAAAA,eAAe,EAACA,eAhBY;AAkB5BH,MAAAA,SAAS,EAACA,SAlBkB;AAmB5BI,MAAAA,eAAe,EAACA,eAnBY;AAqB5BL,MAAAA,QAAQ,EAACA;AArBmB,KAAhC;AAAA,cAuBK9B,KAAK,CAAC6C;AAvBX;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,C,CAGD;;;GAtaU9C,e;;KAAAA,e;AAuaV,MAAM+C,eAAe,GAAEjD,cAAvB;AACA,SAAQiD,eAAR,EAAwB/C,eAAxB","sourcesContent":["import React,{useEffect, useState, useContext} from 'react'\nimport axios from 'axios'\nimport qs from 'qs';\nimport {authenticate, isAuthenticated} from '../Auth/AuthenticationHandler'\n\nconst Base_URL = 'http://localhost:4000'\n\n\n\n\n\n\n\nconst ProductContext = React.createContext()\n\nfunction  ContextProvider(props) {\n\n\n\n\n// FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n    \n    const [block, setblock] = useState(\"0\")\n    const [district, setdistrict] = useState(\"0\")\n\n// FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n\n\n\n\n    const [values,setValues] = useState({\n        // cart : [],\n        products_veg: [],\n        _home_screen : 'kit', // kit or veg\n        kit_screen : '200',      //200 or 400\n        // user_address : [],\n    })\n    \n    const[userValues,setUserValues] = useState({\n        user_address : [],\n   })\n\n\n   const[cart,setCart] = useState({\n        cart : [],\n    })\n\n\n    const initUserAddress = async ()=>{\n        let phoneNo = isAuthenticated().phoneNumber;\n        let phoneNumber ;\n\n        // console.log(\"init address\")\n\n        try\n        {\n            phoneNumber = (phoneNo).substring(3);\n        }catch{\n\n        }\n\n        await axios({\n            'method'    :   'GET',\n            'url'       :   `${Base_URL}/user/${phoneNumber}`,\n            'headers'   :   {\n                                'content-type': 'application/x-www-form-urlencoded;charset=utf-8',\n                            },\n            'data'      :  qs.stringify({\n                            }),\n        })\n        .then (res =>{\n            // if success\n            if(res.status === 201)\n            {\n                // console.log(res.data)\n                if( (res.data.full_name==='notfound') )\n                {\n                    // console.log(\"no user\");\n                    UpdateNullAddress() ;\n                }\n                else\n                {\n                    \n                    setUserValues({\n                                    ...userValues,\n                                    user_address : [res.data], // match it from backend\n                                });    \n\n                    // console.log(\"201 : \" , res.data )\n                    // console.log(\"return true\")\n                    \n                }\n                \n            }\n            else {\n                console.log(\"401 : \" , res.data )\n            }\n        }).catch(err=>{\n        })\n\n        return true;\n\n    }\n\n\n\n\n\n\n    // ---------------------------------------------------\n    // CART START \n\n    const InitCart = async () =>{\n        \n        let phoneNo = isAuthenticated().phoneNumber;\n        let phoneNumber ;\n\n        // console.log(\"Add to cart : \", itemId , \" , \" , Quantity );\n\n        try\n        {\n            phoneNumber = (phoneNo).substring(3);\n        }catch{\n\n        }\n        \n\n        await axios({\n            'method'    :   'GET',\n            'url'       :   `${Base_URL}/cart/${phoneNumber}`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                           },\n        })\n        .then(res =>{\n            // if success\n            if(res.status === 201)\n            {\n                // console.log(\" data read from cart : \" , res.data )\n                // let phoneNo = isAuthenticated().phoneNumber;\n                // let phoneNumber;\n                setCart({\n                    ...cart,\n                    cart:[res.data],\n                })\n\n                // console.log(\"cart : \", res.data)\n            }\n        }).catch(err=>{\n            \n        })\n    }\n\n\n    const AddToCart = async (itemId, quantity) =>{\n        \n        let phoneNo = isAuthenticated().phoneNumber;\n        let phoneNumber ;\n\n        // console.log(\"Add to cart : \", itemId , \" , \" , Quantity );\n\n        try\n        {\n            phoneNumber = (phoneNo).substring(3);\n        }catch{\n\n        }\n\n        await axios({\n            'method'    :   'POST',\n            'url'       :   `${Base_URL}/cart/`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                                \"product_id\":`${itemId}`, \n                                \"quantity\":quantity, \n                                \"user_id\":`${phoneNumber}`, \n                                \"ordered_or_not\":1\n                           },\n        })\n        .then(res =>{\n            // if success\n            if(res.status === 201)\n            {\n                console.log(\" data pushed : \" , res.data )\n                \n                // let phoneNo = isAuthenticated().phoneNumber;\n                // let phoneNumber;\n                setUserValues({\n                                ...userValues,\n                                user_address : [res.data], // match it from backend\n                            })\n\n                initKitProducts()\n            }\n        }).catch(err=>{\n            \n        })\n    }\n\n\n    // counter handle\n    const CartChangeCount = async (itemId, quantity) =>{\n        \n        let phoneNo = isAuthenticated().phoneNumber;\n        let phoneNumber ;\n\n        console.log(\"cart count adjust : \", itemId , \" , \" , quantity );\n\n        try\n        {\n            phoneNumber = (phoneNo).substring(3);\n        }catch{\n\n        }\n\n        await axios({\n            'method'    :   'PATCH',\n            'url'       :   `${Base_URL}/cart/${phoneNumber}`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                                \"product_id\":`${itemId}`, \n                                \"quantity\":`${quantity}`, \n                                \"user_id\":`${phoneNumber}`, \n                                \"ordered_or_not\":1\n                           },\n        })\n        .then(res =>{\n            // if success\n            if(res.status === 201)\n            {\n                console.log(\" data pushed : \" , res.data )\n                \n                // let phoneNo = isAuthenticated().phoneNumber;\n                // let phoneNumber;\n                setUserValues({\n                                ...userValues,\n                                user_address : [res.data], // match it from backend\n                            })\n\n                initKitProducts()\n            }\n        }).catch(err=>{\n            \n        })\n    }\n    // CART SECTION END\n    // ---------------------------------------------------\n\n\n\n    const UpdateNullAddress = async ()=>{\n        \n        let phoneNo = isAuthenticated().phoneNumber;\n        \n        // console.log(\" updateNull address : \" , district , block );\n\n        let phoneNumber;\n        try{\n            phoneNumber = (phoneNo).substring(3);\n        }\n        catch{\n\n        }\n        \n        await axios({\n            'method'    :   'POST',\n            'url'       :   `${Base_URL}/user/`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                                id:`${phoneNumber}`,\n                                full_name:\"name\",\n                                house_name:\"name\",\n                                street_name:\"name\", \n                                pincode:\"name\",\n                                district:district, \n                                block:block,\n                           },\n        })\n        .then(res =>{\n            // if success\n            if(res.status === 201)\n            {\n                console.log(\" data pushed : \" , res.data )\n                \n                // let phoneNo = isAuthenticated().phoneNumber;\n                // let phoneNumber;\n                setUserValues({\n                                ...userValues,\n                                user_address : [res.data], // match it from backend\n                            })\n\n                initKitProducts()\n            }\n        }).catch(err=>{\n            \n        })\n        \n    }\n\n\n    const initKitProducts = async ()=>{\n        // console.log(\"values :  \" , userValues.user_address[0] );\n        var data =  userValues.user_address[0];\n        // console.log(\"init kit \");\n        // await fetch('https://api.npms.io/v2/search?q=react')\n        await axios({\n            'method'    :   'POST',\n            'url'       :   `${Base_URL}/products/products-with-location/`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                                district:data.district, \n                                block:data.block,\n                        },                  \n        })\n        .then(res =>{\n            if(res.status === 201)\n            {\n                setValues({\n                    ...values,\n                    products_veg : res.data, // match it from backend\n                })\n                // console.log(\"res data : \", res.data );\n            }\n        }).catch(err=>{\n            console.log(\"error at product init : \",err);\n        })\n        \n    }\n\n\n\nconst placeOrder = async (slot, total_amount)=>{\n    // console.log(\"values :  \" , userValues.user_address[0] );\n    var data =  userValues.user_address[0];\n    let phoneNo = isAuthenticated().phoneNumber;\n        \n    // console.log(\" updateNull address : \" , district , block );\n\n    let phoneNumber;\n    try{\n            phoneNumber = (phoneNo).substring(3);\n    }catch{\n\n    }\n\n    // console.log(\"init kit \");\n    // await fetch('https://api.npms.io/v2/search?q=react')\n    await axios({\n        'method'    :   'POST',\n        'url'       :   `${Base_URL}/orders/`,\n        'headers'   :   {\n                            'content-type': 'application/json;charset=utf-8',\n                        },\n        'data'      :  {\n                            user_id:phoneNo, \n                            slot:slot,\n                            total_amount:total_amount,\n                            status:1,\n                            payment_id:\"NULL\"\n                       },                  \n    })\n    .then(res =>{\n        if(res.status === 201)\n        {\n            setValues({\n                ...values,\n                products_veg : res.data, // match it from backend\n            })\n            // console.log(\"res data : \", res.data );\n        }\n    }).catch(err=>{\n        console.log(\"error at product init : \",err);\n    })\n    \n}\n\n\n   useEffect( async ()=>{\n        // call function to initialize data to product kit\n        if(isAuthenticated())\n        {\n            await initUserAddress()\n            // await initKitProducts()\n            await InitCart();\n        }\n        \n\n        \n        // await initCartItems()\n        \n        // await initOrderPlaced()\n        \n    },[])\n\n\n\n\n    return (\n        <ProductContext.Provider value={{\n            ...userValues,\n            ...values,\n            block,\n            district,\n            ...cart,\n \n            setValues : setValues,\n            setUserValues : setUserValues,\n\n\n            setblock:setblock,\n            setdistrict:setdistrict,\n            \n            initUserAddress:initUserAddress,\n\n            initKitProducts:initKitProducts,\n\n            AddToCart:AddToCart,\n            CartChangeCount:CartChangeCount,\n\n            InitCart:InitCart,\n        }}>\n            {props.children}\n        </ProductContext.Provider>\n    )\n}\n\n\n// const ContextConsumer = ProductContext.Consumer;\nconst ContextConsumer =ProductContext  ;\nexport {ContextConsumer,ContextProvider}\n\n"]},"metadata":{},"sourceType":"module"}