{"ast":null,"code":"var _jsxFileName = \"/home/sree/Documents/Works/naadanvipani/frontend/naadan-vipani-trivandrum-for-backend-master/src/utils/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport qs from 'qs';\nimport { authenticate, isAuthenticated } from '../Auth/AuthenticationHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Base_URL = 'http://localhost:4000';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(props) {\n  _s();\n\n  // FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n  const [block, setblock] = useState(\"0\");\n  const [district, setdistrict] = useState(\"0\"); // const handleChangeBlockAndDistrict = name => event => { \n  //     setblockAndDistrict({ ...blockAndDistrict, [name]: event.target.value })\n  // }\n  // FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n\n  const [values, setValues] = useState({\n    // cart : [],\n    products_veg: [],\n    _home_screen: 'kit',\n    // kit or veg\n    kit_screen: '200' //200 or 400\n    // user_address : [],\n\n  });\n  const [userValues, setUserValues] = useState({\n    user_address: [\"sree\", \"abcd\"]\n  });\n  const [Cart, setCart] = useState({\n    cart: []\n  });\n\n  const initUserAddress = async () => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    let phoneNumber;\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'GET',\n      'url': `${Base_URL}/user/${phoneNumber}`,\n      'headers': {\n        'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n      },\n      'data': qs.stringify({})\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        // console.log(res.data)\n        if (res.data.full_name === 'notfound') {\n          // console.log(\"no user\");\n          UpdateNullAddress();\n        } else {\n          setUserValues({ ...userValues,\n            user_address: [res.data] // match it from backend\n\n          });\n        }\n      } else {\n        console.log(\"401 : \", res.data);\n      }\n    }).catch(err => {});\n  };\n\n  const UpdateNullAddress = async () => {\n    let phoneNo = isAuthenticated().phoneNumber;\n    console.log(\" updateNull address \");\n    let phoneNumber;\n\n    try {\n      phoneNumber = phoneNo.substring(3);\n    } catch {}\n\n    await axios({\n      'method': 'POST',\n      'url': `${Base_URL}/user/`,\n      'headers': {\n        'content-type': 'application/json;charset=utf-8'\n      },\n      'data': {\n        id: `${phoneNumber}`,\n        full_name: \"name\",\n        house_name: \"name\",\n        street_name: \"name\",\n        pincode: \"name\",\n        district: district,\n        block: block\n      }\n    }).then(res => {\n      // if success\n      if (res.status === 201) {\n        console.log(\" data pushed : \", res.data); // let phoneNo = isAuthenticated().phoneNumber;\n        // let phoneNumber;\n\n        setUserValues({ ...userValues,\n          user_address: [res.data] // match it from backend\n\n        });\n      }\n    }).catch(err => {});\n  };\n\n  const initKitProducts = async () => {\n    // console.log(\"init kit \");\n    // await fetch('https://api.npms.io/v2/search?q=react')\n    await axios({\n      'method': 'GET',\n      'url': `${Base_URL}/products/`,\n      'headers': {\n        'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n      },\n      'data': qs.stringify({// 'userPhone': phoneNumber,\n      })\n    }).then(res => {\n      // if success\n      // console.log(\"da njan vanneyy : \", res.status );\n      if (res.status === 201) {\n        setValues({ ...values,\n          products_veg: res.data // match it from backend\n\n        }); // console.log(res.data);\n      }\n    }).catch(err => {});\n  };\n\n  useEffect(async () => {\n    // call function to initialize data to product kit\n    await initUserAddress();\n    await initKitProducts(); // await initCartItems()\n    // await initOrderPlaced()\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: { ...userValues,\n      ...values,\n      block,\n      district,\n      setValues: setValues,\n      setUserValues: setUserValues,\n      setblock: setblock,\n      setdistrict: setdistrict\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n} // const ContextConsumer = ProductContext.Consumer;\n\n\n_s(ContextProvider, \"VIW552/YYKgKl+9FRzX7dJm5s9U=\");\n\n_c = ContextProvider;\nconst ContextConsumer = ProductContext;\nexport { ContextConsumer, ContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/sree/Documents/Works/naadanvipani/frontend/naadan-vipani-trivandrum-for-backend-master/src/utils/Context.js"],"names":["React","useEffect","useState","useContext","axios","qs","authenticate","isAuthenticated","Base_URL","ProductContext","createContext","ContextProvider","props","block","setblock","district","setdistrict","values","setValues","products_veg","_home_screen","kit_screen","userValues","setUserValues","user_address","Cart","setCart","cart","initUserAddress","phoneNo","phoneNumber","substring","stringify","then","res","status","data","full_name","UpdateNullAddress","console","log","catch","err","id","house_name","street_name","pincode","initKitProducts","children","ContextConsumer"],"mappings":"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","sourcesContent":["import React,{useEffect, useState, useContext} from 'react'\nimport axios from 'axios'\nimport qs from 'qs';\nimport {authenticate, isAuthenticated} from '../Auth/AuthenticationHandler'\n\nconst Base_URL = 'http://localhost:4000'\n\n\n\n\n\n\n\nconst ProductContext = React.createContext()\n\nfunction  ContextProvider(props) {\n\n\n\n\n// FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n    \n    const [block, setblock] = useState(\"0\")\n    const [district, setdistrict] = useState(\"0\")\n\n    // const handleChangeBlockAndDistrict = name => event => { \n    //     setblockAndDistrict({ ...blockAndDistrict, [name]: event.target.value })\n    // }\n// FOR CHANGING BLOCK AND DISTRICT FROM LOGIN SCREEN\n\n\n\n\n    const [values,setValues] = useState({\n        // cart : [],\n        products_veg: [],\n        _home_screen : 'kit', // kit or veg\n        kit_screen : '200',      //200 or 400\n        // user_address : [],\n    })\n    \n    const[userValues,setUserValues] = useState({\n        user_address : [\"sree\",\"abcd\"],\n   })\n\n\n   const[Cart,setCart] = useState({\n        cart : [],\n    })\n\n\n    const initUserAddress = async ()=>{\n        let phoneNo = isAuthenticated().phoneNumber;\n        let phoneNumber ;\n\n        try\n        {\n            phoneNumber = (phoneNo).substring(3);\n        }catch{\n\n        }\n\n        await axios({\n            'method'    :   'GET',\n            'url'       :   `${Base_URL}/user/${phoneNumber}`,\n            'headers'   :   {\n                                'content-type': 'application/x-www-form-urlencoded;charset=utf-8',\n                            },\n            'data'      :  qs.stringify({\n                            }),\n        })\n        .then (res =>{\n            // if success\n            if(res.status === 201)\n            {\n                // console.log(res.data)\n                if( (res.data.full_name==='notfound') )\n                {\n                    // console.log(\"no user\");\n                    UpdateNullAddress() ;\n                }\n                else\n                {\n                    setUserValues({\n                                    ...userValues,\n                                    user_address : [res.data], // match it from backend\n                                });    \n                }\n                \n            }\n            else {\n                console.log(\"401 : \" , res.data )\n            }\n        }).catch(err=>{\n        })\n\n\n\n    }\n\n\n\n\n    const UpdateNullAddress = async ()=>{\n        \n        let phoneNo = isAuthenticated().phoneNumber;\n        \n        console.log(\" updateNull address \");\n\n        let phoneNumber;\n        try{\n            phoneNumber = (phoneNo).substring(3);\n        }\n        catch{\n\n        }\n        \n        await axios({\n            'method'    :   'POST',\n            'url'       :   `${Base_URL}/user/`,\n            'headers'   :   {\n                                'content-type': 'application/json;charset=utf-8',\n                            },\n            'data'      :  {\n                                id:`${phoneNumber}`,\n                                full_name:\"name\",\n                                house_name:\"name\",\n                                street_name:\"name\", \n                                pincode:\"name\",\n                                district:district, \n                                block:block,\n                           },\n        })\n        .then(res =>{\n            // if success\n            if(res.status === 201)\n            {\n                console.log(\" data pushed : \" , res.data )\n                \n                // let phoneNo = isAuthenticated().phoneNumber;\n                // let phoneNumber;\n\n                setUserValues({\n                                ...userValues,\n                                user_address : [res.data], // match it from backend\n                            })\n            }\n        }).catch(err=>{\n            \n        })\n        \n    }\n\n\n\n\n\n\nconst initKitProducts = async ()=>{\n       \n    // console.log(\"init kit \");\n    // await fetch('https://api.npms.io/v2/search?q=react')\n    await axios({\n        'method'    :   'GET',\n        'url'       :   `${Base_URL}/products/`,\n        'headers'   :   {\n                            'content-type': 'application/x-www-form-urlencoded;charset=utf-8',\n                        },\n        'data'      :  qs.stringify({\n                        // 'userPhone': phoneNumber,\n                        }),\n    })\n    .then(res =>{\n        // if success\n        // console.log(\"da njan vanneyy : \", res.status );\n        if(res.status === 201)\n        {\n            setValues({\n                ...values,\n                products_veg : res.data, // match it from backend\n            })\n            // console.log(res.data);\n        }\n    }).catch(err=>{\n    })\n    \n}\n\n\n\n\n   useEffect( async ()=>{\n        // call function to initialize data to product kit\n        await initUserAddress()\n\n\n\n        await initKitProducts(  )\n        // await initCartItems()\n        \n        // await initOrderPlaced()\n        \n    },[])\n\n\n\n\n    return (\n        <ProductContext.Provider value={{\n            ...userValues,\n            ...values,\n            block,\n            district,\n \n            setValues : setValues,\n            setUserValues : setUserValues,\n\n\n            setblock:setblock,\n            setdistrict:setdistrict,\n           \n            \n        }}>\n            {props.children}\n        </ProductContext.Provider>\n    )\n}\n\n\n// const ContextConsumer = ProductContext.Consumer;\nconst ContextConsumer =ProductContext  ;\nexport {ContextConsumer,ContextProvider}\n\n"]},"metadata":{},"sourceType":"module"}